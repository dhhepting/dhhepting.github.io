<p>
  While technical issues are central to the computing curriculum, they do not constitute a complete
  educational program in the field. Students must also be exposed to the larger societal context of
  computing to develop an understanding of the relevant social, ethical, legal and professional
  issues. This need to incorporate the study of these non-technical issues into the ACM curriculum
  was formally recognized in 1991, as can be seen from the following excerpt
  <a href="https://cs.stanford.edu/people/eroberts/Curtis-ComputerManpower/">[2]</a> --
</p>
<blockquote class="mx-4">
  <em>
    <p>
      Undergraduates also need to understand the basic cultural, social, legal, and ethical
      issues inherent in the discipline of computing. They should understand where the
      discipline has been, where it is, and where it is heading. They should also understand
      their individual roles in this process, as well as appreciate the philosophical questions,
      technical problems, and aesthetic values that play an important part in the development
      of the discipline.
    </p>
    <p>
      Students also need to develop the ability to ask serious questions about the social
      impact of computing and to evaluate proposed answers to those questions. Future
      practitioners must be able to anticipate the impact of introducing a given product into a
      given environment. Will that product enhance or degrade the quality of life? What will
      the impact be upon individuals, groups, and institutions?
    </p>
    <p>
      Finally, students need to be aware of the basic legal rights of software and hardware
      vendors and users, and they also need to appreciate the ethical values that are the basis
      for those rights. Future practitioners must understand the responsibility that they will
      bear, and the possible consequences of failure. They must understand their own
      limitations as well as the limitations of their tools. All practitioners must make a longterm commitment to remaining current in their chosen specialties and in the discipline
      of computing as a whole.
    </p>
  </em>
</blockquote>
<p>
  As technological advances continue to significantly impact the way we live and work, the critical
  importance of social issues and professional practice continues to increase; new computer-based
  products and venues pose ever more challenging problems each year. It is our students who
  must enter the workforce and academia with intentional regard for the identification and
  resolution of these problems.
</p>
<p>
  Computer science educators may opt to deliver this core and elective material in stand-alone
  courses, integrated into traditional technical and theoretical courses, or as special units in
  capstone and professional practice courses. The material in this familiarity area is best covered
  through a combination of one required course along with short modules in other courses. On the
  one hand, some units listed as Core Tier-1 (in particular, Social Context, Analytical Tools,
  Professional Ethics, and Intellectual Property) do not readily lend themselves to being covered in
  other traditional courses. Without a standalone course, it is difficult to cover these topics
  appropriately. On the other hand, if ethical and social considerations are covered only in the
  standalone course and not “in context,” it will reinforce the false notion that technical processes
  are void of these other relevant issues. Because of this broad relevance, it is important that
  several traditional courses include modules with case studies that analyze the ethical, legal,
  social and professional considerations in the context of the technical subject matter of the course.
  Courses in areas such as software engineering, databases, computer networks, information
  assurance and security, and introduction to computing provide obvious context for analysis of
  ethical issues. However, an ethics-related module could be developed for almost any course in
  the curriculum. It would be explicitly against the spirit of the recommendations to have only a
  standalone course. Running through all of the issues in this area is the need to speak to the
  computing practitioner’s responsibility to proactively address these issues by both moral and
  technical actions. The ethical issues discussed in any class should be directly related to and arise
  naturally from the subject matter of that class. Examples include a discussion in the database
  course of data aggregation or data mining, or a discussion in the software engineering course of
  the potential conflicts between obligations to the customer and obligations to the user and others
  affected by their work. Programming assignments built around applications such as controlling
  the movement of a laser during eye surgery can help to address the professional, ethical and
  social impacts of computing. Computing faculty who are unfamiliar with the content and/or
  pedagogy of applied ethics are urged to take advantage of the considerable resources from ACM,
  IEEE-CS, SIGCAS (special interest group on computers and society), and other organizations.
</p>
<p>
  It should be noted that the application of ethical analysis underlies every subsection of this Social
  and Professional knowledge area in computing. The ACM Code of Ethics and Professional
  Conduct (<a href="http://www.acm.org/about/code-of-ethics" target="_blank">http://www.acm.org/about/code-of-ethics</a>) provides guidelines that serve as the basis
  for the conduct of our professional work. The General Moral Imperatives provide an
  understanding of our commitment to personal responsibility, professional conduct, and our
  leadership roles.
</p>
