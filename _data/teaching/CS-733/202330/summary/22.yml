Audio-Transcript:
- desc: Happy Wednesday.
  persid: ''
- desc: 'So I had Sorry, do you have a

    question?'
  persid: ''
- desc: 'I was confused because previous

    assignments had two codes like'
  persid: ''
- desc: 'two separate. Like samples are

    like two separate codes and this'
  persid: ''
- desc: 'time it''s just one so I was

    like, making sure like if it''s'
  persid: ''
- desc: 'just one or like I''m making some

    mistake or not.'
  persid: ''
- desc: 'Now I was thinking about making

    it easier. Thank you.'
  persid: ''
- desc: 'Sara, you You said earlier that

    there might be a chance that you'
  persid: ''
- desc: 'can give us a day or two and

    assignment number three by you'
  persid: ''
- desc: 'were posting it because we have

    a project assignments coming in'
  persid: ''
- desc: 'this week, as well. So, you

    consider'
  persid: ''
- desc: 'Yes. You mean in your mobile

    computing class do you have a'
  persid: ''
- desc: project and assign Yes, project.
  persid: ''
- desc: 'Presentation is not not today,

    but actually'
  persid: ''
- desc: 'the final exams the projects of

    the presentation, okay.'
  persid: ''
- desc: Morning
  persid: ''
- desc: Monday.
  persid: ''
- desc: '27th Right. I think that''s the

    right day. Monday is the 27th.'
  persid: ''
- desc: Yes, okay. Thank you.
  persid: ''
- desc: 'Okay, does that sound like a

    plan?'
  persid: ''
- desc: Morning
  persid: ''
- desc: Day
  persid: ''
- desc: screen down
  persid: ''
- desc: 'so, one Examples from the text

    is the'
  persid: ''
- desc: 'I don''t remember what he called

    it. I don''t think it''s cube'
  persid: ''
- desc: 'elfa. Pardon me, I said it''s a

    deconstructed cube. Yes. So the'
  persid: ''
- desc: issue is
  persid: ''
- desc: 'so we talked about translucent

    surfaces the other day.'
  persid: ''
- desc: 'So the idea was to draw opaque

    polygons with a depth buffer. So'
  persid: ''
- desc: 'we''re going to enable depth

    testing. We''re going to write'
  persid: ''
- desc: 'the depth buffer for opaque

    polygons. And then we''re going'
  persid: ''
- desc: 'to use the depth buffer

    information, but not write to'
  persid: ''
- desc: 'it. Read Only to render the

    translucent polygons and we''re'
  persid: ''
- desc: 'going to do them in order for

    this to nearest.'
  persid: ''
- desc: 'So I deconstructed the cube, as

    Karen says so that I could you'
  persid: ''
- desc: 'can easily order to Polygons

    from back to front.'
  persid: ''
- desc: 'And then I''m every time I''m

    rendering, move them around a'
  persid: ''
- desc: 'bit so you can see some

    different effects.'
  persid: ''
- desc: 'So now the yellow and the cyan

    are opaque.'
  persid: ''
- desc: 'So what does that look like?

    code'
  persid: ''
- desc: 'so I''m passing in. So I have

    vertex attribute for the'
  persid: ''
- desc: 'position and for the color and I

    have a model view and a'
  persid: ''
- desc: 'projection matrix. So I''m

    determining position by'
  persid: ''
- desc: 'multiplying the input vertex

    position by the modelview matrix'
  persid: ''
- desc: and the projection matrix
  persid: ''
- desc: 'and then for a fragment shader

    just passing through the vertex'
  persid: ''
- desc: color
  persid: ''
- desc: and saying the fragment color
  persid: ''
- desc: 'so here are the coordinates of

    the of the faces. So they go'
  persid: ''
- desc: 'from minus point five minus

    point five to plus point five'
  persid: ''
- desc: 'plus point five. So you''re

    squares around the origin and,'
  persid: ''
- desc: 'and then I''m saying this Zed

    value to be different. So I''m'
  persid: ''
- desc: 'starting out, this is the

    furthest 16543 to one'
  persid: ''
- desc: 'and here I''m saying the face

    colors so I can, you can see'
  persid: ''
- desc: 'that blue and green. have alpha

    point five and red and magenta'
  persid: ''
- desc: have alpha point five.
  persid: ''
- desc: 'And then I''m saying the

    projection so I''m going near'
  persid: ''
- desc: zero far is 10.
  persid: ''
- desc: 'Left and right bottom and top.

    And then I''m specifying the'
  persid: ''
- desc: 'viewing transfermate viewing

    make viewing parameters so the'
  persid: ''
- desc: 'eye point is at minus one and

    Zed looking at the origin with'
  persid: ''
- desc: the y positive y axis is up.
  persid: ''
- desc: 'So here we''re generating the

    data. Setting the viewport'
  persid: ''
- desc: enabling depth test
  persid: ''
- desc: 'your we have the color buffer

    and the vertex buffer. And then'
  persid: ''
- desc: 'we''re setting up the location

    for the projection and the view'
  persid: ''
- desc: 'model view matrix made those

    matrices so when render'
  persid: ''
- desc: 'we clear this the color and the

    depth set the projection matrix'
  persid: ''
- desc: 'so we turn on depth mask true

    that means we''re writing to the'
  persid: ''
- desc: depth
  persid: ''
- desc: and we disable blending
  persid: ''
- desc: 'I''m not sure that''s strictly

    necessary but'
  persid: ''
- desc: I had
  persid: ''
- desc: 'better safe than sorry. I think

    it''s good practice to do that.'
  persid: ''
- desc: 'So then, here I have the indices

    of the opaque polygons. So I''m'
  persid: ''
- desc: 'going through the list and then

    I''m creating the modelview'
  persid: ''
- desc: 'matrix. I started by applying a

    random rotation then a random'
  persid: ''
- desc: 'translation and then I multiply

    that by the look the viewing'
  persid: ''
- desc: 'transformation so that gives the

    model view transformation'
  persid: ''
- desc: 'and so I''m drawing each face

    separately'
  persid: ''
- desc: 'and this is giving the offset

    into the coordinate array and'
  persid: ''
- desc: 'redrawing six vertices, so two

    triangles with each. So, other'
  persid: ''
- desc: 'words a square with each call to

    draw arrays. And then when we'
  persid: ''
- desc: 'finish that then we go and draw

    the translucent spheres. Sphere'
  persid: ''
- desc: 'squares pardon me. So we turn

    off writing to the depth buffer.'
  persid: ''
- desc: 'We''re still using it. We''re just

    not adding information to it.'
  persid: ''
- desc: 'Enable blend. And here''s a blend

    function'
  persid: ''
- desc: 'so the source is the fragment

    shader and the destination is'
  persid: ''
- desc: 'the frame buffer. So that''s what

    we''re blending'
  persid: ''
- desc: 'so we''re doing the same kind of

    setup where we''re doing a random'
  persid: ''
- desc: 'rotation, then a random

    translation. Then multiplying by'
  persid: ''
- desc: 'two look at the viewing

    transformation so.'
  persid: ''
- desc: So we're drawing
  persid: ''
- desc: 'each track each square

    separately from the back to the'
  persid: ''
- desc: front.
  persid: ''
- desc: 'So then I''m waiting five

    seconds, and then we''re starting'
  persid: ''
- desc: 'again. And here''s just the code

    to put the vertex data together'
  persid: ''
- desc: 'for the triangles. In the

    squares.'
  persid: ''
- desc: 'That makes sense. So the thing

    that caused me a lot of grief'
  persid: ''
- desc: this time
  persid: ''
- desc: Yeah.
  persid: ''
- desc: Was the text
  persid: ''
- desc: US
  persid: ''
- desc: undefined
  persid: ''
- desc: because if we don't
  persid: ''
- desc: I'm not gonna mess with it.
  persid: ''
- desc: 'So that didn''t come up as an

    error'
  persid: ''
- desc: 'at runtime, it did. No, really

    not even at runtime'
  persid: ''
- desc: 'so with the depth mask, not so I

    also by extension I wrote in'
  persid: ''
- desc: 'gmail dot true so having those

    two undefined values, messed it'
  persid: ''
- desc: 'up. And that was the problem. So

    I have to report that to the'
  persid: ''
- desc: textbook authors.
  persid: ''
- desc: 'Anyway, so I''ll have I''ll have

    this version published. And I''ll'
  persid: ''
- desc: give you a link to it
  persid: ''
- desc: 'Okay, so the other one I wanted

    to show you is.'
  persid: ''
- desc: 'So what we''re doing here is

    creating a texture in an off'
  persid: ''
- desc: 'screen buffer and we have a

    lower resolution version here.'
  persid: ''
- desc: So we can adjust that
  persid: ''
- desc: 'example the text was incomplete

    because it talked about setting'
  persid: ''
- desc: 'up a render buffer but it didn''t

    use it. So I''ve used it here. So'
  persid: ''
- desc: 'this is the way when we do the

    assignment to buffers. In our'
  persid: ''
- desc: 'earlier examples where we say

    bind, create a buffer and bind'
  persid: ''
- desc: 'it for vertices and colors. If

    we want to do that for an off'
  persid: ''
- desc: 'screen frame buffer object, we

    create a render buffer and then'
  persid: ''
- desc: 'we attach the render buffer to

    the frame buffer. And what we'
  persid: ''
- desc: 'need here is something to start

    depth because we it''s hard to'
  persid: ''
- desc: 'tell me but there are two

    triangles one poking through the'
  persid: ''
- desc: other one.
  persid: ''
- desc: Okay so let's look at
  persid: ''
- desc: 'so vertex shader one is just

    take the position as passed.'
  persid: ''
- desc: 'Setting the position variable in

    vertex shader to is taking the'
  persid: ''
- desc: 'position but we''re also using

    texture coordinates so fragment'
  persid: ''
- desc: shader one
  persid: ''
- desc: 'I''ve changed it from the

    original to accept a color as it'
  persid: ''
- desc: 'is a uniform color and so we''re

    setting that to be the fragment'
  persid: ''
- desc: 'color so that''s it that''s

    fragment shader one and fragment'
  persid: ''
- desc: shader two is
  persid: ''
- desc: 'assigned the fragment color

    based on accessing the texture'
  persid: ''
- desc: 'map. So, fragment shader one are

    the vertex shader one and'
  persid: ''
- desc: 'fragment shader one are creating

    the texture fragment vertex'
  persid: ''
- desc: 'shader two and fragment shader

    two are using the texture'
  persid: ''
- desc: okay so
  persid: ''
- desc: 'so we''re setting we''re only

    using one texture register so we'
  persid: ''
- desc: 'make that set that to be the

    active texture create an empty'
  persid: ''
- desc: texture
  persid: ''
- desc: 'and restoring RGB, a RGB and

    alpha and save bytes. So that''s'
  persid: ''
- desc: 'what we''re and we''re defining it

    to be a text size'
  persid: ''
- desc: 'now we''re setting some

    parameters for the texture. So'
  persid: ''
- desc: 'we allocate a frame buffer

    object so this is an off screen.'
  persid: ''
- desc: 'Pleased to render the texture so

    we bind the frame so we''re going'
  persid: ''
- desc: 'to after we''ve created the

    buffer frame buffer, we''re going'
  persid: ''
- desc: 'to use it and then we attach the

    color buffer and we''re going'
  persid: ''
- desc: 'and for the color we''re using

    our texture, so we''re going to'
  persid: ''
- desc: 'first rate into that texture and

    then we''re going to use it'
  persid: ''
- desc: 'later. So then this is a way to

    get the depth buffer set up. So'
  persid: ''
- desc: 'we create a render buffer. We

    bind a render buffer to it to'
  persid: ''
- desc: the desk buffer we just created
  persid: ''
- desc: and then
  persid: ''
- desc: 'are setting up the storage for

    it. So we''re making it the same'
  persid: ''
- desc: size of the texture
  persid: ''
- desc: and here we're attaching
  persid: ''
- desc: 'so here earlier we did the color

    frame buffer texture here. Here'
  persid: ''
- desc: 'we''re doing frame buffer render

    buffer. So we''re attaching to'
  persid: ''
- desc: 'the frame buffer, a dense

    attachment'
  persid: ''
- desc: 'so we''re saying this is going to

    be used as the depth buffer'
  persid: ''
- desc: 'so because we''re doing the depth

    buffer, we''re setting up the'
  persid: ''
- desc: 'format of the data so we''re

    storing data so we''re setting up'
  persid: ''
- desc: the storage to be
  persid: ''
- desc: 'for the depths, so this is the

    way to do that. That constant'
  persid: ''
- desc: 'so I mean you have more

    distributed names here. So use'
  persid: ''
- desc: 'triangle text, create triangle

    textures, and use triangle'
  persid: ''
- desc: 'textures. So using create using

    the first term to create the'
  persid: ''
- desc: texture enable dev test
  persid: ''
- desc: 'so here we''re setting color for

    the first triangle to be red'
  persid: ''
- desc: 'ish. And then the second

    triangle we''re setting up to be'
  persid: ''
- desc: greenish.
  persid: ''
- desc: 'So we''re jamming the texture and

    then we''re switching from the'
  persid: ''
- desc: 'frame buffer object to the

    screen'
  persid: ''
- desc: 'set the texture and then we

    render and we''re drying the'
  persid: ''
- desc: 'background square with the

    texture.'
  persid: ''
- desc: 'See if we can generate a higher

    resolution'
  persid: ''
- desc: hello
  persid: ''
- desc: 'so we can generate a very high

    resolution texture. So when it'
  persid: ''
- desc: 'when we sat lit with the second

    fragment shader'
  persid: ''
- desc: 'we have an excess of information

    here so the result is'
  persid: ''
- desc: a very very sharp image
  persid: ''
- desc: 'let''s go back to a lower

    resolution version.'
  persid: ''
- desc: Does that make sense?
  persid: ''
- desc: So we need to specify
  persid: ''
- desc: 'we have to dress for everything

    right'
  persid: ''
- desc: that means
  persid: ''
- desc: geography camera.
  persid: ''
- desc: 'Staring at stuff starting that

    would be'
  persid: ''
- desc: 'so with one are staring so we''re

    staring at arrays of numbers is'
  persid: ''
- desc: not conducive. To.
  persid: ''
- desc: Smelt up front
  persid: ''
- desc: all right laserLine
  persid: ''
- desc: that's not a word
  persid: ''
- desc: 'maybe there''s not two genes

    anyway'
  persid: ''
- desc: so
  persid: ''
- desc: 'I know looking at so they have a

    teapot. model in the chapter'
  persid: ''
- desc: 'nine code there''s some errors in

    it.'
  persid: ''
- desc: 'It''s staring at the numbers not

    conclusive.'
  persid: ''
- desc: conduce
  persid: ''
- desc: in brackets as
  persid: ''
- desc: spelling
  persid: ''
- desc: 'let me just let me check my

    spelling. Here. It is great. Oh'
  persid: ''
- desc: okay
  persid: ''
- desc: she's added that word there
  persid: ''
- desc: looks worse
  persid: ''
- desc: okay
  persid: ''
- desc: 'so we want to be able to so we

    think about the strategy for'
  persid: ''
- desc: 'modeling something then we want

    to think about we want to'
  persid: ''
- desc: include a cube we don't
  persid: ''
- desc: 'necessarily want to deal with

    just the cube vertices and then'
  persid: ''
- desc: 'make that up. So it''s better to

    have a cube object. For example'
  persid: ''
- desc: 'and then so I want to go through

    the'
  persid: ''
- desc: 'Okay, so we''ve defined two

    different cubes and we''ve'
  persid: ''
- desc: 'positioned them and are doing

    the rotation'
  persid: ''
- desc: 'Okay, so let''s look at how

    that''s defined'
  persid: ''
- desc: 'so you''re redoing your rotation

    in the vertex shader.'
  persid: ''
- desc: 'So it''s just a matter of

    rotation'
  persid: ''
- desc: 'so we''ve lived the

    transformation transformations'
  persid: ''
- desc: 'to position the Q''s in the in

    the JavaScript code. So let''s'
  persid: ''
- desc: look at that now.
  persid: ''
- desc: 'So I started adding a third

    cube. So we''ll try to complete'
  persid: ''
- desc: that in a minute
  persid: ''
- desc: so we have
  persid: ''
- desc: 'the color buffer vertex buffer

    event listeners then further'
  persid: ''
- desc: 'so we''re just drawing all the

    triangles here'
  persid: ''
- desc: 'right so let''s look at how the

    cube is defined.'
  persid: ''
- desc: 'So we''re setting up the vertices

    based on the size. And if it''s'
  persid: ''
- desc: 'not, if it''s not specified we

    set the size to be point five.'
  persid: ''
- desc: 'Otherwise, if size is specified

    we said to be half the size. So'
  persid: ''
- desc: 'the idea is we get a if we don''t

    specify a size we get a unit'
  persid: ''
- desc: 'cube centered around the origin.

    And if we do specify a size then'
  persid: ''
- desc: 'we''re specifying the size of the

    face so we divide by two so we'
  persid: ''
- desc: get a cube around the origin
  persid: ''
- desc: 'and we get the face normals and

    indices. So this is how we''re'
  persid: ''
- desc: getting
  persid: ''
- desc: 'specifying how to use the

    vertices and creating a face'
  persid: ''
- desc: 'vertex colors. So these are all

    opaque'
  persid: ''
- desc: 'so this is how we''re doing.

    We''re specifying the coordinates'
  persid: ''
- desc: of the
  persid: ''
- desc: 'so you can see them how they

    correspond here to so the first'
  persid: ''
- desc: 'cube that first face is 1032 and

    103321. So those are the way'
  persid: ''
- desc: 'we''re specifying the triangles

    for the cube faces.'
  persid: ''
- desc: 'Here are the texture

    coordinates.'
  persid: ''
- desc: 'So what we''re doing here is

    applying the modeling'
  persid: ''
- desc: 'transformations directly to the

    to the cube vertices so'
  persid: ''
- desc: so that's why we don't have to.
  persid: ''
- desc: 'Again, in my elfa example

    earlier, we did the modeling'
  persid: ''
- desc: 'transformations separately from

    the square the squares that are'
  persid: ''
- desc: 'being drawn. So here it would be

    if we use this approach then we'
  persid: ''
- desc: 'could specify the square and the

    cornice should be changed to'
  persid: ''
- desc: 'reflect the modeling

    transformations you''ve applied'
  persid: ''
- desc: 'Okay, so that''s so we''re getting

    the data set up for the for the'
  persid: ''
- desc: cube this way
  persid: ''
- desc: so let's add our third
  persid: ''
- desc: cube
  persid: ''
- desc: 'aside from your lab to two

    cubes, let''s see if we can'
  persid: ''
- desc: See if I can
  persid: ''
- desc: Too far away
  persid: ''
- desc: okay
  persid: ''
- desc: so let's
  persid: ''
- desc: 'listen advantage of that. Kind

    of approach.'
  persid: ''
- desc: 'So looking at the cube data so

    we''ve separated functionality'
  persid: ''
- desc: 'from our Java main JavaScript

    program. So to see it''s only'
  persid: ''
- desc: '105 104 lines long. So it''s

    pretty straightforward so we''ve'
  persid: ''
- desc: 'managed to hide some complexity

    what are we so the maybe that''s'
  persid: ''
- desc: an advantage.
  persid: ''
- desc: 'So if I want to do 1000 cubes in

    this approach'
  persid: ''
- desc: 'so I''m getting 1000 calls copies

    of the cube data.js data'
  persid: ''
- desc: 'structure so that''s not not

    efficient'
  persid: ''
- desc: so we're also cementing
  persid: ''
- desc: 'primitives in, in space, so

    we''re not'
  persid: ''
- desc: 'so right, we''re initializing

    coordinates there instead of so'
  persid: ''
- desc: 'you if you want to change the

    date change the transformations'
  persid: ''
- desc: 'in the model to animate that

    might be a problem.'
  persid: ''
- desc: So there is.
  persid: ''
- desc: 'me show you the teapot.

    Instance.'
  persid: ''
- desc: 'is So here''s the problem that I

    can see.'
  persid: ''
- desc: Collection No, it's not so bad
  persid: ''
- desc: 'so I read as I did some reading

    it was a teapot and originally'
  persid: ''
- desc: 'it didn''t have a bottom. So the

    bottom data has been added'
  persid: ''
- desc: so the nice thing about
  persid: ''
- desc: so to be more efficient
  persid: ''
- desc: not looking at the right file
  persid: ''
- desc: 'so instead of copying data and

    having that inefficiency, we can'
  persid: ''
- desc: draw instance
  persid: ''
- desc: 'we can draw arrays instance. So

    we have one set of data that we'
  persid: ''
- desc: can
  persid: ''
- desc: 'got pretty multiple versions

    from the same model. So that'
  persid: ''
- desc: 'that helps us to manage

    complexity make the code more'
  persid: ''
- desc: readable as well.
  persid: ''
- desc: Okay, so
  persid: ''
- desc: 'we''ve talked a little bit about

    modeling here. So we''ll look at'
  persid: ''
- desc: 'how to deal with the robot arm

    and figured out HTML file next'
  persid: ''
- desc: 'next day. And then that''s

    Monday, then Wednesday and'
  persid: ''
- desc: 'Monday. The next week. Need to

    look at the example and current'
  persid: ''
- desc: 'requested some review material

    on the course'
  persid: ''
- desc: 'so we have just three more

    sessions'
  persid: ''
- desc: 'yeah Time flies when you''re

    having fun. Anyway, any'
  persid: ''
- desc: questions or concerns?
  persid: ''
- desc: 'I''ll see if I can find that

    problem with the data okay. So'
  persid: ''
- desc: 'thank you very much for today.

    Have a good weekend. And so have'
  persid: ''
- desc: 'the due date for an assignment

    three on Monday at one minute to'
  persid: ''
- desc: 'midnight. Okay and good luck

    with your your final slash'
  persid: ''
- desc: project in your other class
  persid: ''
- desc: Okay, take care everyone.
  persid: ''
- desc: My name
  persid: ''
- desc: 'is be waiting for somebody to

    come up with'
  persid: ''
- desc: 'is be waiting for somebody to

    come up with'
  persid: ''
offering:
  id: CS-733-202330
