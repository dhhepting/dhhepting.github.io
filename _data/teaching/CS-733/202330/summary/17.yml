Audio-Transcript:
- desc: 'So what''s your class in the

    midterm? Which one is more'
  persid: ''
- desc: 'completing? Now Good luck on

    that everyone'
  persid: ''
- desc: 'so I have to confess that I

    spent a long time trying to'
  persid: ''
- desc: 'provide a simple mistake and

    shader example I was doing for'
  persid: ''
- desc: 'you. So that kind of put me off

    on getting some other things'
  persid: ''
- desc: 'done. Anyway, so here we are

    meeting.'
  persid: ''
- desc: 'Sitting 17 of 25 Right I think

    so.'
  persid: ''
- desc: 'It''s big for me and I was I was

    worried about getting out my'
  persid: ''
- desc: 'store steps that anyway. So no

    freezing rain. So we''re just put'
  persid: ''
- desc: 'off again for another day or

    two. I hope. Freezing rain isn''t'
  persid: ''
- desc: 'usually a wet sign of winter

    here. But it''s as climate'
  persid: ''
- desc: 'changes then. You get stranger

    stranger. Events.'
  persid: ''
- desc: 'vertex and fragment shader

    examples'
  persid: ''
- desc: 'show you those examples that

    I''ll talk about.'
  persid: ''
- desc: 'Following up today I asked this

    question on Stack Overflow about'
  persid: ''
- desc: 'this. So hopefully I got a

    response'
  persid: ''
- desc: so look at that today
  persid: ''
- desc: That's chapter seven.
  persid: ''
- desc: 'Let''s talk about midterm exams

    on Wednesday.'
  persid: ''
- desc: Meeting 18.
  persid: ''
- desc: 'When you say assignments is the

    response to the assignments or'
  persid: ''
- desc: the next assignments?
  persid: ''
- desc: 'Well, I was I was gonna write

    some more then I heard you'
  persid: ''
- desc: 'talking so I thought I''d come

    over here the same question'
  persid: ''
- desc: so lots of assignment. to
  persid: ''
- desc: It was a tough one.
  persid: ''
- desc: 'Savor and say tough, too tough.

    Yes.'
  persid: ''
- desc: Okay, I just have this
  persid: ''
- desc: 'Okay, so I''m gonna talk to the

    marker about when we can do'
  persid: ''
- desc: 'assignments three, four, and

    five. All right. So would you'
  persid: ''
- desc: 'have three Well, yeah. Not even

    half. Okay, I''ll take in'
  persid: ''
- desc: 'consideration the two tough

    comment. Thank you so much. Much'
  persid: ''
- desc: 'appreciated. I hope to talk to

    him today. So.'
  persid: ''
- desc: 'Sir, noted there beside the too

    tough'
  persid: ''
- desc: 'I think you should write don''t

    make it too tough. Because that'
  persid: ''
- desc: could be it could still be
  persid: ''
- desc: Yep, that makes sense. Okay.
  persid: ''
- desc: 'Yeah, I guess we should just go

    go home. Today. Just excuse me'
  persid: ''
- desc: for a minute please.
  persid: ''
- desc: 'Hi, I totally prepared for the

    day I wanted to go okay. Well,'
  persid: ''
- desc: this afternoon we'll go one
  persid: ''
- desc: data.
  persid: ''
- desc: Supply
  persid: ''
- desc: chain the percent so 1% for
  persid: ''
- desc: '30 days she sits next to me and

    you say I don''t know what do'
  persid: ''
- desc: you.
  persid: ''
- desc: 'Wear we use it what do you do

    for me? What do you think is'
  persid: ''
- desc: happening
  persid: ''
- desc: 'because we didn''t do it. I''m

    just gonna start the exam from'
  persid: ''
- desc: 'the back Okay, so here''s our

    vertex shader example we had'
  persid: ''
- desc: last week.
  persid: ''
- desc: 'She knows I don''t know here''s

    the fragment shader version'
  persid: ''
- desc: should you notice a difference
  persid: ''
- desc: overnight or hence not so much
  persid: ''
- desc: okay. So here
  persid: ''
- desc: to there?
  persid: ''
- desc: 'So I believe they''re using the

    same JavaScript code but it''s'
  persid: ''
- desc: difficult to get them.
  persid: ''
- desc: 'To have the same viewing

    parameters'
  persid: ''
- desc: 'anyway, so what do you notice

    it''s different between them?'
  persid: ''
- desc: 'The the this one has a diffused

    light which is basically the'
  persid: ''
- desc: 'other one has a more direct you

    know, central point base Okay,'
  persid: ''
- desc: 'let me show you the code for

    both.'
  persid: ''
- desc: 'Okay, so we''re using shader Q

    dot j s here for the fragment'
  persid: ''
- desc: 'one we''re using shader cube.js.

    I''m using the web version of'
  persid: ''
- desc: other libraries under the common
  persid: ''
- desc: 'Okay, so that''s not they''re both

    using the same'
  persid: ''
- desc: 'so we both have the late

    position is that one in Zed?'
  persid: ''
- desc: 'direction. So that should be

    just in front'
  persid: ''
- desc: 'let''s remove it a little bit.

    Here. To be. Point five and'
  persid: ''
- desc: five.
  persid: ''
- desc: 'Can see this a little brighter

    now with the vertex shader right'
  persid: ''
- desc: 'so let''s look at what happens

    with the fragment shader.'
  persid: ''
- desc: 'Okay, so the layout is the same

    so, just just changed the light'
  persid: ''
- desc: 'position in both of them. So the

    light is actually the same light'
  persid: ''
- desc: is the diffusion the lights
  persid: ''
- desc: 'Yeah, so it''s the same code so

    to light light the diffuse'
  persid: ''
- desc: component
  persid: ''
- desc: so let's
  persid: ''
- desc: 'go so we have a white light for

    the diffuse and for specular'
  persid: ''
- desc: 'let''s maybe change the color of

    the specular highlight the light'
  persid: ''
- desc: 'for the specular component what

    color would you like to see?'
  persid: ''
- desc: Magenta okay I can do agenda
  persid: ''
- desc: see magenta There
  persid: ''
- desc: 'you go because it is okay let''s

    change the color up and'
  persid: ''
- desc: let's make it a gray cube
  persid: ''
- desc: 'so, all of the material is great

    but not quite full well. It''s'
  persid: ''
- desc: 'full gray and be white. So this

    is a little bit less than white.'
  persid: ''
- desc: 'It''s kind of anyway, it''s 80%

    White. Okay, see if we can see'
  persid: ''
- desc: the agenda now.
  persid: ''
- desc: 'Can you see magenta their eyes

    are playing tricks on me. Okay,'
  persid: ''
- desc: 'so what difference did we talk

    last week about in terms of'
  persid: ''
- desc: 'vertex and fragment shaders so

    when is each being called'
  persid: ''
- desc: 'so we call it vertex shader once

    per vertex, and we call the'
  persid: ''
- desc: fragment shader once per pixel
  persid: ''
- desc: 'and so what did we talk about

    the difference between grow and'
  persid: ''
- desc: farm shading?
  persid: ''
- desc: On shading to calculation Eggman
  persid: ''
- desc: Yeah, so
  persid: ''
- desc: 'started I took a picture this

    maybe I should just double check'
  persid: ''
- desc: mix
  persid: ''
- desc: 'so for just doing the cooking

    the color computations in the'
  persid: ''
- desc: 'vertex shader. What are we

    getting? Out of? So we get a'
  persid: ''
- desc: 'vertex color which the fragment

    shader can interpolate but it'
  persid: ''
- desc: 'can''t it''s not doing any more

    calculations.'
  persid: ''
- desc: 'Okay so that that means if the

    light isn''t above one of the'
  persid: ''
- desc: 'vertices we''re not going to see

    a bright highlight'
  persid: ''
- desc: why about fragment shaders
  persid: ''
- desc: 'so we''re calculating colors

    based on interpolating.'
  persid: ''
- desc: Information
  persid: ''
- desc: from the vertices
  persid: ''
- desc: 'right so if we determine the

    light, the light vector the'
  persid: ''
- desc: 'viewer position so in the vertex

    shader, we get the information'
  persid: ''
- desc: 'about where the layout is, where

    the viewer is, and where the'
  persid: ''
- desc: 'vertex is. We can calculate

    those three vectors. So the'
  persid: ''
- desc: 'normal for the surface pardon me

    so we calculate that in our'
  persid: ''
- desc: 'JavaScript actually pass it as

    an attribute to the vertex'
  persid: ''
- desc: 'shader. So we access that and

    calculate the late vector as a'
  persid: ''
- desc: 'different difference between the

    light position on the vertex and'
  persid: ''
- desc: 'the viewer vector. Difference

    between the viewer position and'
  persid: ''
- desc: 'the vertex and we do that in

    world coordinate space using the'
  persid: ''
- desc: 'modelview matrix. So if we have

    those three vectors then we can'
  persid: ''
- desc: 'we have this information then we

    can do the calculation to work'
  persid: ''
- desc: 'with you and I can''t wait.

    Sorry. My bad'
  persid: ''
- desc: 'so this is the information we''re

    going to send from the vertex'
  persid: ''
- desc: 'shader to the fragment shader.

    So based on that we can get we'
  persid: ''
- desc: 'can calculate the intermediate

    highlights or the highlights'
  persid: ''
- desc: 'that occur not at the vertices.

    Does that make sense?'
  persid: ''
- desc: 'So let me I''ll show you the

    corrected version, but I''ll tell'
  persid: ''
- desc: 'you what mistake I made and I

    couldn''t see maybe you can guess'
  persid: ''
- desc: what I did.
  persid: ''
- desc: 'Okay, so vertex fragment shader,

    we''re just doing fragment color'
  persid: ''
- desc: 'is based on vertex color which

    gets interpolated between the'
  persid: ''
- desc: values by the vertex shader.
  persid: ''
- desc: 'So in our shader, so we have an

    input is a for for vector for'
  persid: ''
- desc: 'position. So it''s x y Zed w. And

    we have the three vector three'
  persid: ''
- desc: 'dimensional vector for the

    normal. And then we''re'
  persid: ''
- desc: 'specifying the vertex color as

    an output from the shader. So'
  persid: ''
- desc: 'those are the in and out

    declarations and then we have'
  persid: ''
- desc: 'uniform values, things that

    don''t change between vertices.'
  persid: ''
- desc: 'So these are all things that are

    calculated in our JavaScript'
  persid: ''
- desc: 'model view and the projection

    matrix are matrices pardon me'
  persid: ''
- desc: 'and if your position and the

    late position'
  persid: ''
- desc: 'so the first one is to make the

    normal vector into a four'
  persid: ''
- desc: 'dimensional vector by adding

    zero in the W position. So then'
  persid: ''
- desc: 'we transform it to the model to

    our world coordinate space and'
  persid: ''
- desc: 'we just take the x, y and z

    components of it. And then the'
  persid: ''
- desc: 'position is, so this is the

    vertex.'
  persid: ''
- desc: 'We do the same thing. transform

    it to world coordinates. And'
  persid: ''
- desc: 'take the take X, Y and Zed

    components and the light vector'
  persid: ''
- desc: 'and normalize it and we get L so

    those are the two of the three'
  persid: ''
- desc: 'that we''re interested in your

    position x, y Zed of view, take'
  persid: ''
- desc: 'the x y Zed components of the

    viewer vector'
  persid: ''
- desc: 'viewer position pardon me. And

    then we this is the calculation'
  persid: ''
- desc: 'that saves us some time. That''s

    why it''s called the blend blend'
  persid: ''
- desc: 'Phong shading our reflection

    model and then we''re doing'
  persid: ''
- desc: 'product so we compute the Ambien

    component'
  persid: ''
- desc: 'we''re actually doing the

    computation here. We''ve done it'
  persid: ''
- desc: 'in the JavaScript server, we''re

    just and it''s a uniform value.'
  persid: ''
- desc: 'So that''s just what''s been

    computed.'
  persid: ''
- desc: 'So here for the diffuse color.

    We''re calculating a constant'
  persid: ''
- desc: 'here based on the angle between

    the late vector and the normal'
  persid: ''
- desc: 'vector. So it''s the K D is going

    to be the highest value when'
  persid: ''
- desc: 'they''re aligned so as the

    noonday sun so to speak. Does'
  persid: ''
- desc: 'that make sense? And then

    specular.'
  persid: ''
- desc: 'So we''re doing a power based on

    the angle between the normal and'
  persid: ''
- desc: 'the half halfway vector and

    we''re raising that so it might'
  persid: ''
- desc: be zero if bless you.
  persid: ''
- desc: 'So we''re really going to have a

    specular component if if the'
  persid: ''
- desc: angles less than 90 degrees.
  persid: ''
- desc: 'So we added the three components

    together to get together to get'
  persid: ''
- desc: 'the root text color. And we

    determine the position of the'
  persid: ''
- desc: 'vertex in our clip coordinates

    after doing the projection'
  persid: ''
- desc: 'matrix. So we have calculated

    Vertex Color and we''ve set the'
  persid: ''
- desc: 'position of the point using the

    GL position variable.'
  persid: ''
- desc: 'And then the fragment shader is

    just doing a pass through so'
  persid: ''
- desc: 'just as the interpolation of

    intensities from the vertices in'
  persid: ''
- desc: 'the triangle so that makes

    sense.'
  persid: ''
- desc: 'Okay, so in the fragment

    version, we''re going to'
  persid: ''
- desc: 'calculate the we''re going to

    take as input the position of'
  persid: ''
- desc: 'the vertex and the normal at the

    vertex. And we''re going to'
  persid: ''
- desc: 'output nl And B is three

    dimensional vectors.'
  persid: ''
- desc: 'And we have matrices is that as

    uniform pieces, and a Layton'
  persid: ''
- desc: 'viewer position that we''re going

    to access here so we do the same'
  persid: ''
- desc: computations.
  persid: ''
- desc: 'Okay, so we''re getting just

    those three bits of information,'
  persid: ''
- desc: 'the normal vector at the vertex,

    the lighting vector at the'
  persid: ''
- desc: 'vertex and the normal vector at

    the vertex'
  persid: ''
- desc: 'and then we''re doing we''re

    deferring the calculation to to'
  persid: ''
- desc: 'the shader to the fragment

    shader. So we say input was'
  persid: ''
- desc: 'three vectors, and we''re going

    to output the fragment color. So'
  persid: ''
- desc: 'you can see that the

    computations are very similar.'
  persid: ''
- desc: 'So now what was the mistake I

    made? What happens if I do this'
  persid: ''
- desc: what does that do?
  persid: ''
- desc: Vector four.
  persid: ''
- desc: 'So here I''m declaring vectors

    NLV and again here, oh, you have'
  persid: ''
- desc: to find them. And
  persid: ''
- desc: 'so the effective mice, the

    version I was puzzling over was'
  persid: ''
- desc: 'that I created local variables

    and the error message was'
  persid: ''
- desc: 'couldn''t find the attribute and

    couldn''t find this attribute.'
  persid: ''
- desc: 'No, not that attribute. This one

    could find the position vector'
  persid: ''
- desc: 'okay. Not Not this one, because

    what happens then, if I declared'
  persid: ''
- desc: a local copy?
  persid: ''
- desc: 'So I have a local copy that I''m

    working with here. And so this'
  persid: ''
- desc: 'is the only place that a marble

    is used. So what happens is the'
  persid: ''
- desc: compiler optimizes the the way.
  persid: ''
- desc: 'So I was looking, I understood

    that this might have I'
  persid: ''
- desc: 'understood the issue, but I

    didn''t understand the symptom or'
  persid: ''
- desc: 'the cause that I had created

    here. So someone pointed out'
  persid: ''
- desc: 'that I I didn''t verbally created

    local copies of the variables.'
  persid: ''
- desc: 'Say when ever had that happen?

    We''ve done programming Okay, so'
  persid: ''
- desc: 'let me be a cautionary tale to

    you. I''ll put a link to my'
  persid: ''
- desc: StackOverflow question.
  persid: ''
- desc: candled save
  persid: ''
- desc: Okay.
  persid: ''
- desc: 'Start again here on writing

    large at the top of the board'
  persid: ''
- desc: 'Okay, so before we do you

    understand the difference'
  persid: ''
- desc: 'between those two? The two

    shaders fragment vertex shaders'
  persid: ''
- desc: 'with the cue says nothing about

    nothing about the light position'
  persid: ''
- desc: 'or the quality of the light is

    the same information. But it''s'
  persid: ''
- desc: 'just interpreting us

    differently. So instead of doing'
  persid: ''
- desc: 'one calculation of the vertices,

    we''re doing a calculation of'
  persid: ''
- desc: 'interpolated vectors. Along get

    converted into pixel level Okay.'
  persid: ''
- desc: 'You get more complex

    appearances. Does that make'
  persid: ''
- desc: 'sense? Should have something

    more complicated in our images'
  persid: ''
- desc: 'that are generated without

    sacrificing too much? Processing'
  persid: ''
- desc: Time and complexity?
  persid: ''
- desc: So what are some ways you can
  persid: ''
- desc: 'what are some ways you''re

    familiar with or you might think'
  persid: ''
- desc: 'of, maybe up to the task of

    adding some complex visual'
  persid: ''
- desc: 'complexity without adding

    computational complexity. Or'
  persid: ''
- desc: data complexity?
  persid: ''
- desc: 'That''s just what I said. It''s

    easier to read a fight no'
  persid: ''
- desc: unsaid.
  persid: ''
- desc: 'Anyway, any ideas about how we

    can do that?'
  persid: ''
- desc: Well plants
  persid: ''
- desc: Okay, and how can we do that?
  persid: ''
- desc: 'can do something called bump

    mapping'
  persid: ''
- desc: 'remember getting normals for the

    cube so, what if we didn''t give'
  persid: ''
- desc: the real normals of the cube
  persid: ''
- desc: 'What if we perturb them what do

    we still have something that'
  persid: ''
- desc: looks
  persid: ''
- desc: 'Awesome? So, we can use an image

    for that as well'
  persid: ''
- desc: 'okay. So we might use an image

    two as a basis for modifying'
  persid: ''
- desc: 'vectors on the surface or we

    might just map an image onto a'
  persid: ''
- desc: 'model maybe I''ll just show some

    examples of that.'
  persid: ''
- desc: 'See if I can get them to

    cooperate.'
  persid: ''
- desc: 'This may be a little hard to see

    is the images changing a little'
  persid: ''
- desc: bit?
  persid: ''
- desc: 'Okay, so let me show you the

    other one and then we can look'
  persid: ''
- desc: at the code a bit.
  persid: ''
- desc: 'clearly haven''t got the trackpad

    set up properly because I keep'
  persid: ''
- desc: getting these menus
  persid: ''
- desc: 'so, the idea there as you can

    see that it''s just a it''s a'
  persid: ''
- desc: 'square. It''s not a it''s not a

    relief map of Honolulu.'
  persid: ''
- desc: Okay,
  persid: ''
- desc: swear so similarly we have
  persid: ''
- desc: well
  persid: ''
- desc: 'so, we have something new here

    we have an input of a texture'
  persid: ''
- desc: 'coordinate attribute and then it

    was on as well as the position'
  persid: ''
- desc: of the vertex.
  persid: ''
- desc: 'So, we''re going to output the

    light vector and the view vector'
  persid: ''
- desc: and texture space coordinates.
  persid: ''
- desc: 'And then we''ll get into the math

    a bit more in detail and so'
  persid: ''
- desc: so we're getting
  persid: ''
- desc: 'our country vectors of light and

    using vector in texture space'
  persid: ''
- desc: 'So then here''s another. So we

    have the texture coordinate from'
  persid: ''
- desc: 'the Vert. So we have Ellen v.

    And the texture coordinates.'
  persid: ''
- desc: 'Then we have a these are related

    to textures the sampler 2d is a'
  persid: ''
- desc: 'shader. This is part of the

    shader GLSL graphics library'
  persid: ''
- desc: Shading Language
  persid: ''
- desc: 'so the fragment color is based

    on'
  persid: ''
- desc: 'was determined by the diffuse

    portion here.'
  persid: ''
- desc: 'Recruiting it is recruiting a

    texture of 256 by 256 and then'
  persid: ''
- desc: we're
  persid: ''
- desc: 'printing preparing them just a

    little bit here.'
  persid: ''
- desc: 'mixing this up and before we

    talk to you again about it'
  persid: ''
- desc: 'I wanted to show you a couple

    other examples'
  persid: ''
- desc: 'so yeah, so that''s we''re setting

    up the normals to be different.'
  persid: ''
- desc: 'In that first example, the first

    one was just putting the square'
  persid: ''
- desc: 'in and the second one, the other

    one was including some more data'
  persid: ''
- desc: 'about well the hot Honolulu

    Harbor I think this one is'
  persid: ''
- desc: 'you''re taking an image and

    pasting it onto the sides of a'
  persid: ''
- desc: cube
  persid: ''
- desc: 'you have to take into

    consideration the description of'
  persid: ''
- desc: 'the images and the size and I

    see a gap but that cap is more'
  persid: ''
- desc: every inch
  persid: ''
- desc: Yeah, that's I think that's
  persid: ''
- desc: 'I''m not sure that''s caused by

    the the image or'
  persid: ''
- desc: for the image
  persid: ''
- desc: 'so let''s look at the image that

    we''re mapping onto here.'
  persid: ''
- desc: So it's 256 by 256.
  persid: ''
- desc: 'Let me see if we can put a

    different image in here.'
  persid: ''
- desc: This is once more.
  persid: ''
- desc: 'Me see if we can put a different

    image on see if we have the same'
  persid: ''
- desc: issue
  persid: ''
- desc: 'So I''ve I feel like maybe that''s

    an artifact of the image colors'
  persid: ''
- desc: it's
  persid: ''
- desc: 'so you can see this is really

    current 2011.'
  persid: ''
- desc: 'So what happens if we want to

    map an image onto a sphere?'
  persid: ''
- desc: Here's an answer
  persid: ''
- desc: so it looks okay in some spots
  persid: ''
- desc: not great. And some other ones.
  persid: ''
- desc: 'Looks like a face with a pair of

    eyes anyway'
  persid: ''
- desc: 'so I just kind of alluded to

    these idea of texture'
  persid: ''
- desc: coordinates
  persid: ''
- desc: 'so we have a texture that''s in

    two dimensions whether it''s a'
  persid: ''
- desc: square or something more
  persid: ''
- desc: rendition of the Tiger
  persid: ''
- desc: 'so the idea is how do we make

    the transition between these'
  persid: ''
- desc: 'textures and the three

    dimensional objects'
  persid: ''
- desc: 'so it''s one thing to do that.

    Another thing to have a strange'
  persid: ''
- desc: shape strange shape as a sphere
  persid: ''
- desc: 'so we have this issue when we

    try and make maps from the globe'
  persid: ''
- desc: 'and we have to decide how we''re

    going to do the projection. So'
  persid: ''
- desc: 'that''s similar issue here. How

    do we assign coordinates are'
  persid: ''
- desc: 'going to last to transfer the

    image onto the object sometimes'
  persid: ''
- desc: 'straightforward like the cube

    root, if we have a square image'
  persid: ''
- desc: 'and pretty much a cube that''s

    easy to do. Now there''s other'
  persid: ''
- desc: 'times it''s a little more

    complicated so we''ll talk about'
  persid: ''
- desc: that next day
  persid: ''
- desc: let's see all right
  persid: ''
- desc: 'let''s talk about the Wednesday.

    Any questions for ago'
  persid: ''
- desc: 'did I spend too much time on the

    vertex and fragment shaders'
  persid: ''
- desc: 'next Okay, anyway thanks again

    for today. Have a great day and'
  persid: ''
- desc: we'll see you Wednesday thanks
  persid: ''
- desc: thanks
  persid: ''
- desc: the process of
  persid: ''
- desc: the process of
  persid: ''
offering:
  id: CS-733-202330
