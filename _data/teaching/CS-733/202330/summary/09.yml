Audio-Transcript:
- desc: So here we are meeting nine.
  persid: ''
- desc: So we're going to talk about Chapter Four
  persid: ''
- desc: serve as an example.
  persid: ''
- desc: I guess I'm a Florida
  persid: ''
- desc: material state
  persid: ''
- desc: assignment
  persid: ''
- desc: it's not just and or convenient
  persid: ''
- desc: Okay, so here's the link for attendance.
  persid: ''
- desc: Just I'm here I want to reiterate
  persid: ''
- desc: so we're having our midterm exam on Monday. The 23rd. So that's three weeks
    from today.
  persid: ''
- desc: So our schedule
  persid: ''
- desc: so that means you're going to have three more
  persid: ''
- desc: so you have today's meeting
  persid: ''
- desc: and Wednesday's meeting, that's this week and then there's a break.
  persid: ''
- desc: So we have today for three more
  persid: ''
- desc: and then
  persid: ''
- desc: 23rd is the midterm. So
  persid: ''
- desc: chapters one through
  persid: ''
- desc: five.
  persid: ''
- desc: So I asked your input in creating the midterm so it's a fair evaluation that
    we've done.
  persid: ''
- desc: Okay, who can
  persid: ''
- desc: read what I've written on the board?
  persid: ''
- desc: exam that is a fair evaluation of what we've done. Okay.
  persid: ''
- desc: Get a gold star. Anyone, man? Good question so far. Do we have like
  persid: ''
- desc: do you have like, over 1000 people? Yeah. I'll post this week. Thank you.
  persid: ''
- desc: So that's not a guarantee that that's what this will look like. But we'll
    find it.
  persid: ''
- desc: Yeah, sure.
  persid: ''
- desc: So you can comment about whether you like certain questions or styles or questions
    and so on. I think that might have been a 50 minute exam. Whereas this could be
    a 75 minute exam so it could be a little bit longer. If that's a good thing. Or
    a bad thing.
  persid: ''
- desc: Okay
  persid: ''
- desc: any questions or comments about the assignment
  persid: ''
- desc: last one is the like
  persid: ''
- desc: alright. All right.
  persid: ''
- desc: Other than politics
  persid: ''
- desc: as
  persid: ''
- desc: you explain about records, cast get what you want in our assignments, like
    nine different come in three iterations back? I'm not quite sure about keywords
    how do we want?
  persid: ''
- desc: So just that's
  persid: ''
- desc: there's a link for you today
  persid: ''
- desc: assignment
  persid: ''
- desc: so now an assignment
  persid: ''
- desc: I talked about transformations. But that's maybe not quite the language he's
    using in the application. So we're subdividing the triangle into recursive?
  persid: ''
- desc: So we're saying to make a triangle with subdivide, do we call it with each
    of these three triangles.
  persid: ''
- desc: So then there's a way we can say what
  persid: ''
- desc: color that triangle color one and not triangle color to that triangle color
    three
  persid: ''
- desc: now for say the last transformation last subdivisions so.
  persid: ''
- desc: Please remember this
  persid: ''
- desc: is an equal lateral triangle of drawing.
  persid: ''
- desc: Although it's getting a little bit out of whack.
  persid: ''
- desc: So this, this triangle is has been subdivided
  persid: ''
- desc: we've taken
  persid: ''
- desc: the set the same subdivision twice so we say
  persid: ''
- desc: we call it.
  persid: ''
- desc: Oops next year so in there
  persid: ''
- desc: so, if we call it again
  persid: ''
- desc: save us
  persid: ''
- desc: so that's let's say this is our first iteration and then we call subdivide.
  persid: ''
- desc: Sounds it's good. It makes sense though.
  persid: ''
- desc: I imagined that word but if we say subdivide a, b and c, so A, B and C is
    called colors one, two and three. So when we subdivide a and then
  persid: ''
- desc: we go into the routine
  persid: ''
- desc: so
  persid: ''
- desc: these corners are getting
  persid: ''
- desc: so this is subdivide a fall by subdivide a kids color.
  persid: ''
- desc: Or that's a triangle. That's right. In the corner.
  persid: ''
- desc: And similarly something like
  persid: ''
- desc: so that makes sense. I know I'm not getting to your question yet, but I just
    want to review the whole thing again. Does that make sense?
  persid: ''
- desc: So if we so it's about
  persid: ''
- desc: using the
  persid: ''
- desc: way the track functions are called to assign colors to the triangles so what
    are some ways you can pass information to a shader to determine color, but isn't
    based on vertex vertices?
  persid: ''
- desc: Sorry, what's
  persid: ''
- desc: the like the global disease
  persid: ''
- desc: so not not a multiplier so let's just think about so we have
  persid: ''
- desc: so we're talking about positions or attributes from the buffer. During we're
    getting a position for each vertex. We may not we don't need to change we may
    not need to think of a one to one association.
  persid: ''
- desc: So when I did a rotation, for example, we use the uniform variable so that's
    something we can set that isn't attached to each vertex so that's really more
    important. When we talk about the chaos game approach.
  persid: ''
- desc: To that detour, helper not
  persid: ''
- desc: busy idea clear.
  persid: ''
- desc: So they're keeping track of so in this case, we're keeping track of one or
    two trends. One or two function calls the last ones that are made before we draw
    the triangle
  persid: ''
- desc: don't want to go through the whole assignment for you right now. We're leaving
    a bit of a challenge still so
  persid: ''
- desc: but that ideas, okay. All right.
  persid: ''
- desc: So then we're doing chaos
  persid: ''
- desc: so let's say we start here, another choosing a random, one of the three vertices,
    and we're moving the point halfway towards that new vertex. So if we choose vertex
    one, and they move here
  persid: ''
- desc: and then a free choose
  persid: ''
- desc: vertex.
  persid: ''
- desc: Well, let's call it 1233.
  persid: ''
- desc: Choose vertex two and then vertex three
  persid: ''
- desc: and call it just call it some other ones. Where we see couldn't be my random
    number generator.
  persid: ''
- desc: Now 123 pick pick one of the vertices vertices one.
  persid: ''
- desc: Okay
  persid: ''
- desc: shouldn't all be underlined but
  persid: ''
- desc: close
  persid: ''
- desc: Okay, so
  persid: ''
- desc: should you if you are
  persid: ''
- desc: let's let's just go everyone do one start in the corner here. Good. Okay.
    So this is where I ended up
  persid: ''
- desc: what? Actually, let
  persid: ''
- desc: me write it down
  persid: ''
- desc: next you can
  persid: ''
- desc: do the same one twice in a row or two. That's alright. You don't have to pick
    a different one.
  persid: ''
- desc: Okay, next one.
  persid: ''
- desc: Next
  persid: ''
- desc: one more
  persid: ''
- desc: where do we end up? Let's see. Okay. Anyway.
  persid: ''
- desc: So you can see
  persid: ''
- desc: look at the history of colors, or the history of these transformations. So
    the last ones for this point, whichever I didn't mark it down, but whichever point
    that was, maybe we had to and then one could think of a moving window here
  persid: ''
- desc: and the next point has one and three
  persid: ''
- desc: and the next one is three and 1133
  persid: ''
- desc: and two,
  persid: ''
- desc: two and three,
  persid: ''
- desc: three and two.
  persid: ''
- desc: So we can say
  persid: ''
- desc: this matches up
  persid: ''
- desc: with that one, and so on.
  persid: ''
- desc: Does that make sense?
  persid: ''
- desc: Man See ya. Okay.
  persid: ''
- desc: Oh,
  persid: ''
- desc: I thought I was doing okay.
  persid: ''
- desc: It's okay.
  persid: ''
- desc: I'll have it sorted out now.
  persid: ''
- desc: Thanks for your patience.
  persid: ''
- desc: So that makes sense. So that's your question.
  persid: ''
- desc: Every one comma do we need to apply red color 12322
  persid: ''
- desc: So I just
  persid: ''
- desc: so I'm just using these to indicate the colors.
  persid: ''
- desc: I didn't say what they should be. So you can you can choose nine colors that
    are completely different or you can choose colors
  persid: ''
- desc: are related.
  persid: ''
- desc: So how do we how would we relate these three colors? Say this one is red
  persid: ''
- desc: they might add.
  persid: ''
- desc: So if we said this one is red
  persid: ''
- desc: red, red, green, blue.
  persid: ''
- desc: You could say
  persid: ''
- desc: this one is blue with some blue. So this is full This is bright blue, bright
    red, bright green.
  persid: ''
- desc: And the other two are are some mixture of
  persid: ''
- desc: red blue and so this would be
  persid: ''
- desc: a mixture of green and red. And this would be extra blue and red. Blue and
    red
  persid: ''
- desc: green and blue and green and blue, red and green. But then maybe we don't
    want to make one too the same as to one. So we can put more weight on one of the
    colors so we get
  persid: ''
- desc: more of a tent
  persid: ''
- desc: so maybe let's
  persid: ''
- desc: talk a bit a bit about colors. And let's talk a bit more detail about colors.
    Before we go too much further than
  persid: ''
- desc: Is this okay?
  persid: ''
- desc: So let's say we begin with no color.
  persid: ''
- desc: So we say that's black
  persid: ''
- desc: and then we can have red
  persid: ''
- desc: zero to one. Sure.
  persid: ''
- desc: Let's use K for black one
  persid: ''
- desc: we have green and zero to learn more
  persid: ''
- desc: so what's this corner
  persid: ''
- desc: so red screen
  persid: ''
- desc: red pause screen any
  persid: ''
- desc: yellow
  persid: ''
- desc: red plus blue
  persid: ''
- desc: magenta
  persid: ''
- desc: and then
  persid: ''
- desc: magenta plus yellow is Wait
  persid: ''
- desc: blue plus green
  persid: ''
- desc: cyan
  persid: ''
- desc: I know everyone is just about ready to say siad virtue
  persid: ''
- desc: then say and plus red makes weight as well.
  persid: ''
- desc: So, this RGB cube
  persid: ''
- desc: is useful in some ways. So the RGB relates to the tristimulus color theory
    of color
  persid: ''
- desc: so, those are our primitives
  persid: ''
- desc: RGB
  persid: ''
- desc: really, it's an additive model.
  persid: ''
- desc: So, we're starting from black and we're adding color to it. That's what we
    see on displays.
  persid: ''
- desc: And what about printing we want to subtract from white.
  persid: ''
- desc: So what are the three colors that are
  persid: ''
- desc: the opposites of the RGB magenta
  persid: ''
- desc: cyan black, the sea of yellow
  persid: ''
- desc: so for us cyan, magenta and yellow inks
  persid: ''
- desc: will get a very wet piece of paper and hope it turns out to be black.
  persid: ''
- desc: So that's why one of the reasons why we add printing we have a black ink so
    we're not mixing black
  persid: ''
- desc: okay.
  persid: ''
- desc: So one thing we know we can notice here is
  persid: ''
- desc: the line
  persid: ''
- desc: from black to white. So
  persid: ''
- desc: if we reorient the cube
  persid: ''
- desc: from the side we have
  persid: ''
- desc: black and white
  persid: ''
- desc: again, that's a square.
  persid: ''
- desc: suspend your disbelief it's a square so if we go right along what colors will
    we see if we go for on this line? Like to wait
  persid: ''
- desc: yeah, so.
  persid: ''
- desc: So these are all going to be great. So we go from black to white, and shades
    of gray.
  persid: ''
- desc: Now when we're very close to black, we could add a bit of color. We could
    go out this far.
  persid: ''
- desc: Now add some color but it's not gonna be much color. It's gonna be just a
    very tiny hint.
  persid: ''
- desc: We're up here
  persid: ''
- desc: the widest part and we go at full color
  persid: ''
- desc: that's quite a difference. So I can think of mixing colors going from
  persid: ''
- desc: or tenths and tones
  persid: ''
- desc: so this
  persid: ''
- desc: another picture to show what this cross section looks like.
  persid: ''
- desc: That's the hue that's the color.
  persid: ''
- desc: So we'll see. Red magenta, yellow, cyan, green, and blue
  persid: ''
- desc: so we don't see black or white.
  persid: ''
- desc: At this level, we just see those six colors associated vertices and those
    around them.
  persid: ''
- desc: This
  persid: ''
- desc: so
  persid: ''
- desc: here being
  persid: ''
- desc: go from white
  persid: ''
- desc: so we're going to use
  persid: ''
- desc: squishes into a calm
  persid: ''
- desc: Hue Saturation and Value
  persid: ''
- desc: so we can decide
  persid: ''
- desc: if we're going to
  persid: ''
- desc: forgot to mix colors we could say
  persid: ''
- desc: we start with
  persid: ''
- desc: a primary color and then we can add in
  persid: ''
- desc: another one
  persid: ''
- desc: we can lower the saturation or decrease the value
  persid: ''
- desc: so this is a bit more intuitive way to manipulate colors
  persid: ''
- desc: okay
  persid: ''
- desc: next I want to show you my latest version.
  persid: ''
- desc: So here I have so I had the color selection there before
  persid: ''
- desc: but I made the menu to select drawing mode
  persid: ''
- desc: so
  persid: ''
- desc: there's one red rectangle
  persid: ''
- desc: the yellow one.
  persid: ''
- desc: Now, remember, in the renderer we say draw arrays and then we give it a mode.
    So I allowed mode to be selectable here. Not all that makes sense.
  persid: ''
- desc: Points works so you
  persid: ''
- desc: can see the vertices that we've entered
  persid: ''
- desc: line strip kind of works
  persid: ''
- desc: so we're connecting pairs of vertices. So we have four vertices
  persid: ''
- desc: next, these these these so that gets us three lines. So we can do a line loop
  persid: ''
- desc: and that gives us what we want.
  persid: ''
- desc: Not so much
  persid: ''
- desc: so the strip says going
  persid: ''
- desc: to commit connect them in sequence and the lines just say so the connection
    on between two and three on the left. That I've drawn there isn't happening so
    it's just drawing the two lines
  persid: ''
- desc: so that
  persid: ''
- desc: triangle strip is not the same as a triangle fan
  persid: ''
- desc: and a strip so.
  persid: ''
- desc: We connect the first three and then we make a triangle from the next three
    a triangle fan
  persid: ''
- desc: so, we do one triangle the same way but then
  persid: ''
- desc: that make sense so
  persid: ''
- desc: so they look quite similar
  persid: ''
- desc: conceptually they're different. So triangle fan
  persid: ''
- desc: has a central vertex. So we can add more pieces to the fan we can do a circle
    this way
  persid: ''
- desc: if for drying
  persid: ''
- desc: a strap so this is.
  persid: ''
- desc: So it makes sense the difference
  persid: ''
- desc: triangles are we just getting one triangle out of that?
  persid: ''
- desc: So
  persid: ''
- desc: don't even try this latest version
  persid: ''
- desc: instead of 200 as the maximum number of triangles or a number of rectangles
    I made at 10
  persid: ''
- desc: So I'm
  persid: ''
- desc: just adding a message like that to the log
  persid: ''
- desc: just to test that feature of the code
  persid: ''
- desc: Okay.
  persid: ''
- desc: Okay, so here
  persid: ''
- desc: we have a rotating cube
  persid: ''
- desc: What do you think? Of that?
  persid: ''
- desc: Let's look at the other
  persid: ''
- desc: so what do you see here?
  persid: ''
- desc: What feature What features do you notice about this cube compared to the other
    one?
  persid: ''
- desc: Transparency fading maybe
  persid: ''
- desc: it's not transparency it's
  persid: ''
- desc: that's an error.
  persid: ''
- desc: And what's the other thing we can notice? Site is divided Yeah, so we get
    the sense. So we understand there's a lot the geometry is made. Up of triangles.
  persid: ''
- desc: And that's important emphasis emphasize by the fact that we're using we're
    assigning colors to vertices. And so the color on the face or on the triangle
    gets interpolated.
  persid: ''
- desc: Now I just want to
  persid: ''
- desc: look at one more variation here.
  persid: ''
- desc: So have this system have the same error as the other model does.
  persid: ''
- desc: Let's look at
  persid: ''
- desc: the code
  persid: ''
- desc: okay
  persid: ''
- desc: so this is the textbook version
  persid: ''
- desc: so we have the canvas GL is going to be our graphics or WebGL context we're
    dealing with 36 positions
  persid: ''
- desc: so we're calling function color cube to make our cube and we're using a depth
    as
  persid: ''
- desc: then we're creating a color buffer and a vertex buffer
  persid: ''
- desc: and we have
  persid: ''
- desc: seen a lot of failed location so that's going to pass our rotation angle and
    like the 2d versions, we can rotate an x y and Zed
  persid: ''
- desc: so it's going to be a vector
  persid: ''
- desc: so our color cube function makes the six sides of the cube
  persid: ''
- desc: now we're finding vertices. So how many vertices do we need to divide a cube?
  persid: ''
- desc: A Yeah. Because they're really two squares. And it's just a matter of connecting
    them properly which they did and two out of three cases.
  persid: ''
- desc: So here we have eight vertices from the cube
  persid: ''
- desc: and we have colors
  persid: ''
- desc: so we need to make the face into two triangles
  persid: ''
- desc: so we have
  persid: ''
- desc: variables a, b, c, and d.
  persid: ''
- desc: Doesn't help when I point at my screen. I apologize
  persid: ''
- desc: so we're making triangles ABC an ACD.
  persid: ''
- desc: So in the CS is storing the order of vertices
  persid: ''
- desc: so we're pushing
  persid: ''
- desc: values onto the vertex onto the position into the positions array and then.
  persid: ''
- desc: We're pushing
  persid: ''
- desc: for text color
  persid: ''
- desc: based on just the first index so the coloring based on the first vertex of
    the face
  persid: ''
- desc: so if we
  persid: ''
- desc: commented out uncomment in that first line here, then we would get a different
    color per vertex
  persid: ''
- desc: so when we're doing the rotation or the rendering sorry, clear the color bed
    and the depth buffer bed
  persid: ''
- desc: and we're increasing the angle in the selected axis
  persid: ''
- desc: and then we're doing we're giving the value of theta which is
  persid: ''
- desc: a vector with
  persid: ''
- desc: three positions
  persid: ''
- desc: now control the rotation
  persid: ''
- desc: so we're drawing triangles
  persid: ''
- desc: that
  persid: ''
- desc: meet just
  persid: ''
- desc: quickly our last two minutes here
  persid: ''
- desc: So our vertex shader does a rotation
  persid: ''
- desc: so we get the angles from our uniform value that we're passing in. So you
    can see above there's a uniform back 3d. Calculate cosine and sine and then we're
    doing a rotation matrix. We do well, three rotation matrices are x are y our Zed
    and then we're applying those matrices to the initial position.
  persid: ''
- desc: So the new position
  persid: ''
- desc: is the
  persid: ''
- desc: rotation x y and Zed
  persid: ''
- desc: and the fragment color
  persid: ''
- desc: is the vertex color
  persid: ''
- desc: and the vertex color is from any attribute cause.
  persid: ''
- desc: Does that make sense? So we'll go into a little we'll do some matrix math
    on Wednesday
  persid: ''
- desc: and I'll have
  persid: ''
- desc: a revised version and I'll fix the hole in the
  persid: ''
- desc: in the cube. Anyway,
  persid: ''
- desc: so we're out of time. So,
  persid: ''
- desc: a summary we're doing transformations here. So we saw a bit
  persid: ''
- desc: a bit of the transformations that are possible and so we'll go
  persid: ''
- desc: from there
  persid: ''
- desc: any questions or concerns?
  persid: ''
- desc: Okay,
  persid: ''
- desc: thank you for today.
  persid: ''
- desc: Thank you for your participation in calling out random numbers
  persid: ''
- desc: wasn't so bad was it? Okay, see you Wednesday. Have a great day.
  persid: ''
- desc: Thanks.
  persid: ''
- desc: Thanks.
  persid: ''
offering:
  id: CS-733-202330
