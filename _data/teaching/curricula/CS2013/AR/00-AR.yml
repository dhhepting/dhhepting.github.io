title: "Architecture and Organization"
abbrev: AR
desc:
- para: Computing professionals should not regard the computer as just a black box that executes programs by magic. The knowledge area Architecture and Organization builds on Systems Fundamentals (SF) to develop a deeper understanding of the hardware environment upon which all computing is based, and the interface it provides to higher software layers. Students should acquire an understanding and appreciation of a computer system’s functional components, their characteristics, performance, and interactions, and, in particular, the challenge of harnessing parallelism to sustain performance improvements now and into the future. Students need to understand computer architecture to develop programs that can achieve high performance through a programmer’s awareness of parallelism and latency. In selecting a system to use, students should be able to understand the tradeoff among various components, such as CPU clock speed, cycles per instruction, memory size, and average memory access time.
- para: The learning outcomes specified for these topics correspond primarily to the core and are intended to support programs that elect to require only the minimum 16 hours of computer architecture of their students. For programs that want to teach more than the minimum, the same AR topics can be treated at a more advanced level by implementing a two-course sequence. For programs that want to cover the elective topics, those topics can be introduced within a two-course sequence and/or be treated in a more comprehensive way in a third course.

kakusumm:
  - ku: Digital Logic and Digital Systems
    ct1h: 0
    ct2h: 3
    elect: n
  - ku: Machine Level Representation of Data
    ct1h: 0
    ct2h: 3
    elect: n
  - ku: Assembly Level Machine Organization
    ct1h: 0
    ct2h: 6
    elect: n
  - ku: Memory System Organization and Architecture
    ct1h: 0
    ct2h: 3
    elect: n
  - ku: Interfacing and Communication
    ct1h: 0
    ct2h: 1
    elect: n
  - ku: Functional Organization
    ct1h: 0
    ct2h: 0
    elect: y
  - ku: Multiprocessing and Alternative Architectures
    ct1h: 0
    ct2h: 0
    elect: y
  - ku: Performance Enhancements
    ct1h: 0
    ct2h: 0
    elect: y
