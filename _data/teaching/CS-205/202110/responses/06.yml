raw: []
last_ts_read: '1612243391'
offering:
  id: CS-205-202110
cooked:
- desc: 'I found the discussion about the leading bits to be very interesting. I was
    wondering how the computer would know how many bits were to follow!

    I actually found this lecture to be very clear! I am wondering about the project
    though.

    I''m looking forward to learning more about the project in the coming lecture.
    I am also curious as to where the class will go after discussing Unicode and encoding.

    We''ve finally connected entropy and encoding and it was very interesting to see
    them come together in class.'
- desc: I appreciated the clarification on leading bytes and continuation characters
    when converting binary to the hexadecimal UTF-8 values. It makes much more sense
    than on Tuesday!
- desc: 'Today we learned more about UTF-8. I think I have learned and fully understand
    the concept of Unicode now. We also look at the first assignment a little bit
    and how entropy is in encoding.

    After class I watched the Matthew Carter video about typefaces, it was pretty
    interesting how much effort goes and went into fonts/typefaces.


    I don''t know exactly what we will be learning about next, but hope we can move
    on to more of the stuff related to p5.js and such.'
- desc: I found the video on typefaces to be an interesting view on the history of
    what we see and interact with daily on our computers. Like Matthew describes in
    the video, I haven't ever really put any thought into where our typefaces come
    from, or who created them, or that their creation had challenges of their own
    depending on their intended applications.
- desc: I learnt some basic decoding rule about utf-8 and utf-16, but I am still confused
    about how the code transfer into indexed color.
- desc: I have been enjoying learning the Unicode
- desc: The video we watched on compression code was pretty interesting. I learned
    how you can compress a binary transmission by building a binary tree from the
    bottom up, doing this will save 25% of resources.
- desc: "Entropy can be reduced when compression occurs.\nI was confused on the topic\
    \ of \u201Cstart\u201D and \u201Cmiddle\u201D bytes."
- desc: I learned about Unicode planes and saw video about compression codes, also
    watched a interesting speech video called Decode unicode - the world's writing
    systems, I learned a lot.
- desc: In our 6th meeting we discussed more about Unicode. We learned what binary
    and hexadecimal code form a smiley face and other emojis. We continued watching
    videos about compressing code to send to another computer. Too much compression
    can alter the message drastically and can lose important details. Since the typical
    English writing has a greater chance of writing vowels like A or E, we can try
    and compress the code into smaller forms of binary.
- desc: "In last class we saw couple videos. One was on Decode Unicode \u2013 the\
    \ world\u2019s writing systems. Computer only knows binary. Any symbols, letters,\
    \ or numbers that you write on computer it converts into binary before we see\
    \ on screen. ASCII is American Standard Code for Information Interchange. Due\
    \ to Unicode we can use Greek letters, Arabic letters, Devanagari letters, and\
    \ so on to write on computer. Second one was by Matthew Carter \u2013 My life\
    \ in typefaces. He talked about connection between technology and design. He told\
    \ about how graphics started. He showed different type of font in writing, how\
    \ letters were drawn such as drawing pixel was used and used to take years to\
    \ complete one."
- desc: I learned about unicode more, by using smiling face with eyes example. And
    convert the code into binary and then in hexadecimal. Also seen many example of
    emojis and decode unicode video for more explanation about unicode.
- desc: I have learned to decode Unicode as well as about leading 0 and 1 in UTF-8
    code. If '0' is a leading bit, then it means it only occurs with single byte character.
    If '1' is a leading bit, then it means it is a part of multi-byte character. Based
    on number of bits, we can determine the size of any character (e.g. single byte,
    2 byte character so on). For example, 11110 -> this is a lead byte of 4 byte character.
- desc: I've learned about UTF-8 and UTF-16. Both handle the same Unicode character.
    UTF encodes characters like 8, 16, 24, or 32-bit and UTF -16 encodes characters
    like 16 or 32- bit.
