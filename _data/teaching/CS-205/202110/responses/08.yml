cooked:
- desc: Pros and cons of bitmaps and vectors -- is it true that bitmaps are great
    for fast simple renderings and vectors are best for when you need to use a large
    scale?
- desc: hoping to get to dive into how to use P5js for our assignment due next week
    (we will focus on the assignment first on Tuesday (Mtg 9) and I can adjust the
    due date if needed)
- desc: used an 8 bit question mark as an example (why would one identify it as 8
    bit?)
- desc: learned something relating to the graphics technique called Anti-Aliasing,
    which is used when pixelated diagonal lines show a "staircase" (not only then).
    The graphics technique will shade the pixels on the side of the lines,(how?, why?)
    making it look blurred but (possibly seamless -> smooth(er)) and of higher quality.
- desc: since p5js uses JavaScript and i haven't learned it before, I would
    like to learn more about it in future classes.
- desc: I learned about colour elements in a picture, the pixels, and some knowledge
    about the combination of red, green, and blue.
- desc: interesting to see that bitmaps take up more space than vectors,
    but are less demanding as they don't have to be calculated. I still don't quite
    get how a vector calculation is created or how an image creator knows what
    calculation is needed to create a specific image. (Let's discuss this on Thursday.)
- desc: I was really interested in discussing the three-dimensional representation
    for bitmaps. (x and y are the spatial dimensions [samples] and z is the number
    of bits stored per sample [quantization] -- the more bits the greater the precision)
- desc: I found it a bit difficult to understand how scaling is done. Will it smooth
    edges, what techniques does the computer itself use to make this happen? I would
    love to learn more about anti-aliasing, and rasterization.
- desc: I think anti-aliasing is an interesting topic, that is very applicable even
    with modern high-definition displays. I find the idea of pixels being made up
    of some shapeless samples a little hard to grasp, but the general idea is simple
    enough to work with. (1 pixel == 1 sample, that represents a portion of the area being
    sampled)
- desc: Colours are represented as a combination of red, green and blue. All the possible combinations
    of those colours is called a gamut, all the colours that can be represented on that device. (We will
    talk about this more in an upcoming meeting.) Anti-aliasing is a graphics technique (based on sampling)
- desc: Bitmapped, raster, fonts store each glyph as an array of pixels (samples)
- desc: What intrigued me the most was the new term I learned -- "Jaggies". I was
    also interested in anti-aliasing and hope to discuss more about sampling techniques.
last_ts_read: '1612850813'
offering:
  id: CS-205-202110
raw:
- desc: ???
