Audio-Transcript:
- desc: So I've done a quick start is a good way to get a quick start is basically
    what I did to set up the example that we did in the code directory so the CSS
    goes in the head and then the JavaScript goes at the body
  persid: ''
- desc: so that
  persid: ''
- desc: doesn't stop the page from loading as slow anything down. So the grid This
    is the reference for the grid. This is what I used
  persid: ''
- desc: to put the buttons on one side or the text split on one side and the canvas
    on the other so there are some conceptually there are 12 columns in the screen
    so you can break it down you want to do it easily you could say
  persid: ''
- desc: so, Div
  persid: ''
- desc: I don't make the mistake when I'm taping. I thought that's forwards This is
    a slash not a backslash so I thought.
  persid: ''
- desc: So, the other the other bit to connect HTML with the JavaScript so we can
    use the DOM interface. So we can search by ID or class to make the connection
    between the structure described in the HTML file and the variables that we're
    dealing with in the JavaScript so, your other questions come see me after class
    oh is that the same Okay. Nima. So, do you have a particular question now, or
    maybe? Sure, come see me after class
  persid: ''
- desc: okay.
  persid: ''
- desc: I wanted to show you something here. didn't add it to us hi this is my favorite
    picture of my cat as promised
  persid: ''
- desc: so, she suffered some trauma and again retail and then she had the end amputated
    and so, she's still she still has trouble with that strange looking thing at the
    end of her tail, and she attacks it from time to time
  persid: ''
- desc: but you can so I mentioned this in the context of in polite gesture so when
    she's walking around and has her tail off then you get this sense of
  persid: ''
- desc: what I mean okay.
  persid: ''
- desc: I have to fix up the triangle fan example the cube was when I created it in
    class but I didn't copy it back to my laptop before I refreshed the website so
    it got overwritten anyway so deal with that that make it look more like Thursday.
    So what's the difference if we say we're interested in hidden services or visible
    services?
  persid: ''
- desc: So we can say
  persid: ''
- desc: if we do hidden service removal or are focused on identifying hidden services
    we'd like to remove them so we can
  persid: ''
- desc: render the images more quickly. More accurately if you don't identify visible
    services if you focus on identifying services are visible then those are the services
    we can draw.
  persid: ''
- desc: So if an artist
  persid: ''
- desc: is creating a painting
  persid: ''
- desc: what's your approach?
  persid: ''
- desc: What kind of approach can be used to make sure that we're not so if I have
    my hand behind the screen and it's no longer visible well
  persid: ''
- desc: it's dependent on my viewpoint so
  persid: ''
- desc: any artists here? Okay, seeing none I will pretend to be an artist. Okay,
    so I'm putting my hand behind the screen. So what's happening? Is I'm. So draw
    the person first and then the screen second and then I can fill in the screen
    and cover up That's one way to do it. I draw the screen first then I just need
    to draw to the point
  persid: ''
- desc: that becomes obscured
  persid: ''
- desc: by the screen are there any other? ways we can we can go about doing that
    So, if you want us
  persid: ''
- desc: to think about
  persid: ''
- desc: if we're just if we do this where we just fill in the shapes on the canvas
    then we're dealing with the image space so we're just deciding what's, what's
    visible here. So we're not treating the person as a person so much so we don't
    think of the hands it's obscured.
  persid: ''
- desc: haven't subscribed
  persid: ''
- desc: it's not a missing part of the person. It's just like destroying what's visible
    here. So whereas a person part if we say we're gonna draw the person so we
  persid: ''
- desc: draw, render that model of the person and then we render the bottom of the
    screen in front
  persid: ''
- desc: not not the way that I prefer to be bent. Okay, anyway, so they did. So first.
    First part is that we're dealing with objects and how they interact. So if we
    think of an algorithm that a painter may use
  persid: ''
- desc: How can we articulate that spurts? Imagine that there's a collection of objects
    so how do we start? If I'm painting another masterpiece how do we start start
    the scene. How do we approach that painting so that we see that the Canvas at
    the end depicts or view of this into the scene.
  persid: ''
- desc: So it makes sense. So question makes sense. I sense
  persid: ''
- desc: it doesn't because nobody is reacting okay. Okay, so I'd say we're gonna start
    the objects that we're going to put into the scene
  persid: ''
- desc: how do we sort them if I can
  persid: ''
- desc: draw things on the board and not be if I can draw things to the board and
    not be too self consciously to present my drawings for you trying to encourage
    you to put aside your during this period naturally reserved computer science students
    personas, personalities and participate with the alar. In our class discussions,
    so, sorting does that seem like a good idea and how could we sort things to be
    helpful? JT, do you want to
  persid: ''
- desc: I'm trying to grasp where you're saying, Oh, you're looking at these artists.
  persid: ''
- desc: So let's
  persid: ''
- desc: let me try another example. So when I'm drawing this is clearly mountains
  persid: ''
- desc: as a cloud
  persid: ''
- desc: that's a bird and the sun.
  persid: ''
- desc: Okay, so as the sun goes to us so this
  persid: ''
- desc: this picture there's some things reasonably and not so much
  persid: ''
- desc: so, the roof on the house is confused.
  persid: ''
- desc: And the sun being that large maybe is because the sun is the most distant
    thing in the picture. Right?
  persid: ''
- desc: So this helps us
  persid: ''
- desc: resolve some of the conflicts that we have, but we see that not all the objects
    interact.
  persid: ''
- desc: So if we do the tree first, to do the tree before the mountain, that would
    be a problem
  persid: ''
- desc: so this is a way
  persid: ''
- desc: to scan convert the scene that gives us fairly accurate rendering. So there
    may be issues with one object is not completely in front of or behind. Another
    object. They interact in some more complicated ways so can we implement this approach
    isn't a necessity because things are doing more dangerous by the cloud. The industry
    I shot about 1.6 million acres
  persid: ''
- desc: Yeah, so So let's think about doing this on the computer and we have a description
    of the objects in the walls so we know where we place things so that we can gather
    a distance overall so in our computer model of this, we don't necessarily represent
    the sun as a giant called the gas was 161 point 6 million kilometers away. Late
    from which takes eight minutes to arrive at our position so we might make it as
    far away as possible
  persid: ''
- desc: so is this
  persid: ''
- desc: suitable for computer? So yes and no. Yes, because if we have, we know everything
    that's going to be displayed. So we have
  persid: ''
- desc: knowledge about the entire contents of the scene that we're representing and
    converting into an image format. Then
  persid: ''
- desc: we can order them but what if we don't know all the pieces in the scene when
    we're encountering them not in a sorted order because in our pipeline approach,
    we may not have the whole scene in a complete form before we begin to render it
  persid: ''
- desc: So if we don't know them no, no the order
  persid: ''
- desc: was say we just encountered them and we encountered the house first.
  persid: ''
- desc: How can we
  persid: ''
- desc: what information could we use to make sure that the mountain when it gets
    rendered doesn't
  persid: ''
- desc: obscure the House
  persid: ''
- desc: particularly words in mind but. So let's say by Bob or anyone else is looking
    at over here.
  persid: ''
- desc: You could see this microphone charger which is down so we're processing this
    and we can it looks a bit like the house maybe so we can decide. This is visible
    based on the processing of that object and then say that we encountered this goes
    in front so what we generate when we regress turn this into pixels what's the
    decision needs to be made and then I say we encounter an object here so maybe
    that's only partially visible. So for each object on the screen in our scene recording
    going to figure out
  persid: ''
- desc: the pixels that are involved in rendering the object and then what other what
    other bit of information can we use to decide whether or not that's visible? Just
    like seeing the Square Mile Square
  persid: ''
- desc: Okay, so
  persid: ''
- desc: seeing the image on the screen when you're recording, it's based on the samples
    we take them to see and the images may have pixels, which sat on the scene and
    determine the color to represent it each pointed sampled. So realize that so we
    have one buffer for the colors that make up the image what if we have another
    buffer that stores now so?
  persid: ''
- desc: Okay
  persid: ''
- desc: give me a letter
  persid: ''
- desc: which no you know
  persid: ''
- desc: okay so if you
  persid: ''
- desc: think V was mentioned
  persid: ''
- desc: 'no'
  persid: ''
- desc: are no see, and
  persid: ''
- desc: there's an E
  persid: ''
- desc: BPM No, B P
  persid: ''
- desc: Yes sounds good. So, we can also call it Zed buffer
  persid: ''
- desc: so we record the positions
  persid: ''
- desc: of the objects in the coordinate space. Remember, we have this clip, clip
    chords that go from minus one to plus one in all directions so we're recording
    the depth of our candidate objects. And as you're putting the scene together,
    if the depth is closer than what's already written there
  persid: ''
- desc: then we render it and it might only be
  persid: ''
- desc: right whole object might just be part of it. So using the depth buffer lets
    us construct the scene
  persid: ''
- desc: correctly
  persid: ''
- desc: so it makes sense So
  persid: ''
- desc: better yet? We're not just so this will give us a way to process all the geometry
    in our model to decide
  persid: ''
- desc: what what's visible. And maybe
  persid: ''
- desc: we can imagine the case where it's helpful to
  persid: ''
- desc: also exclude hidden surfaces from consideration that's supposed to be as close
  persid: ''
- desc: so there are six phases to The Cube,
  persid: ''
- desc: right but here we all need
  persid: ''
- desc: we can only C three. And is there a way that we're going to be able to see
    more than three? We cannot see more than three.
  persid: ''
- desc: I'm trying to think if there's a way that I can rotate the cube that
  persid: ''
- desc: device evening and still three Yeah, so looking straight on I'm only seeing
    one. So we think x times y
  persid: ''
- desc: gives us
  persid: ''
- desc: a normal vector going out this way.
  persid: ''
- desc: This one
  persid: ''
- desc: is there.
  persid: ''
- desc: So for.
  persid: ''
- desc: Say the angle the case of these other surfaces so our test would let show
    us these three surfaces are visible and we can remove the other three surfaces.
    So that saves us half that reduces our work by a factor of two. CMRA any questions
    before we say goodbye for today?
  persid: ''
- desc: I'm going to ask how can intervene. distant object because the object can
    stay close and they can overlap.
  persid: ''
- desc: Yeah, so
  persid: ''
- desc: when we've transformed so it may have the viewing volume that starts out.
    If it's a parallel projection then it's the view volumes are parallel of paper
    that we squish into the unit cube and the clip coordinates. And if it's a prospective
    projection, then we have this truncated pyramid shape and that gets so we're dealing
    with the clip coordinates. And then we can take a test so we're going to get Zed
    values for the objects in that case. So we're recording this distances and the
    closest objects
  persid: ''
- desc: that make it
  persid: ''
- desc: to the screen are going to record those death values those set times and sort
    of test testing a new element is that closer than the existing one and if it is,
    then we'll replace the color for that pixel color buffer. And we'll update this
    that was the Zed value. So that makes sense. Okay, so think about when you have
    an algorithm to say find the largest number so you can initialize that variable
    to be the smallest number that you can represent. And then you go through the
    list. Guess is this number larger than the previous one? So the first one is going
    to be going to be larger because I starting out with the smallest number we can
    represent. And the other approach is to say if you're starting out, set the maximum
    value to the first number in the list and then you do comparisons through the
    list is this number and meaning now is it larger than the max one? Go through
    the list and by the end of it you'll have a value for the maximum one. That's
    the maximum value in the list. of data you entered. So think of that approach
    not just for one variable, but so we're doing that in every location on the screen.
    So the Zed buffer is going to store the values of the options is closest and then
    the color buffer will store the color associated with the object that was recorded
    in the set. Make sense? Okay. Go to this. I apologize. Questions. Sounds like
    next classes outside. So outside or you come to my office to have some more questions.
    Okay. Thank you for today. out a lot. What's going on I don't know why this midterm
    seems I know where I'm gonna get the same place if I go to one store. Anyway Have
    a good day. Good day. Right I can't I can't do it. Like that and I was in the
    library right right you for sure like an hour gap?
  persid: ''
- desc: to the screen are going to record those death values those set times and sort
    of test testing a new element is that closer than the existing one and if it is,
    then we'll replace the color for that pixel color buffer. And we'll update this
    that was the Zed value. So that makes sense. Okay, so think about when you have
    an algorithm to say find the largest number so you can initialize that variable
    to be the smallest number that you can represent. And then you go through the
    list. Guess is this number larger than the previous one? So the first one is going
    to be going to be larger because I starting out with the smallest number we can
    represent. And the other approach is to say if you're starting out, set the maximum
    value to the first number in the list and then you do comparisons through the
    list is this number and meaning now is it larger than the max one? Go through
    the list and by the end of it you'll have a value for the maximum one. That's
    the maximum value in the list. of data you entered. So think of that approach
    not just for one variable, but so we're doing that in every location on the screen.
    So the Zed buffer is going to store the values of the options is closest and then
    the color buffer will store the color associated with the object that was recorded
    in the set. Make sense? Okay. Go to this. I apologize. Questions. Sounds like
    next classes outside. So outside or you come to my office to have some more questions.
    Okay. Thank you for today. out a lot. What's going on I don't know why this midterm
    seems I know where I'm gonna get the same place if I go to one store. Anyway Have
    a good day. Good day. Right I can't I can't do it. Like that and I was in the
    library right right you for sure like an hour gap?
  persid: ''
offering:
  id: CS-733-202230
